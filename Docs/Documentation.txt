                        .o.             .o.       ooooooooooooo    oooooooooo.
                       .888.           .888.      8'   888   `8    `888'   `Y8b
                      .8"888.         .8"888.          888          888      888  .ooooo.   .ooooo.
                     .8' `888.       .8' `888.         888          888      888 d88' `88b d88' `"Y8
                    .88ooo8888.     .88ooo8888.        888          888      888 888   888 888
                   .8'     `888.   .8'     `888.       888          888     d88' 888   888 888   .o8
                  o88o     o8888o o88o     o8888o     o888o        o888bood8P'   `Y8bod8P' `Y8bod8P'
------------------------------------------------------------------------------------------------------------------------

AAT - Ascii Art Text Generator

-------------------------------------------------------------
FOR USING 
just open terminal and write aat and string. Example:
aat hi

OR
you can open terminal, write a  "aat"   and then put in a string

-------------------------------------------------------------
OPTIONS FOR AAT
Syntax:

  aat --option --option "str" OR aat -option -option "str"

1.ALL ARGUMENTS MUST BE SEPARATED BY SPACE
2.RECOMENDED USE "" FOR YOUR STRING ARGUMENT BUT YOU CAN USE JUST A SYMBOLS BUT WITHOUT SPACE

All Options:
  -f "nameOfFont" font name. Font name must be without .af extension. For example: --font test
  -h print a documentation for you
  -p0 put Off space between symbols
  -p1 put On space between symbols
  --Red change output text color
  --Blue change output text color
  --Yellow change output text color
  --Cyan change output text color
  --Purple change output text color
  --Black change output text color
  --Green change output text color
  -l print output by left side
  -r print output by right side
  -c print output by center
  -lk0 like a comment mode off
  -lk1 like a comment mode on
  -rp0 doesn't replace symbol space to dot
  -rp1 replace symbol space to dot
  -wt set a width equals a terminal width
  -w integerValue set a width by hand
  In beta:
  -s0 turn off a smashing mode
  -s1 turn on a smashing mode 

-------------------------------------------------------------
FOR CREATING YOUR OWN FONT 
YOU NEED FOLLOW THIS SPECIFICATION:

1 ALL FONTS MUST be sorted by
A a B b C c ... X x Y y Z z 0 1 2 3 ... 9 . , : ; ' " ! ? / | \ ( ) [ ] { } < > + - * = & ^ % $ # @ _ ~ ` and the last symbol it's just space
MAX CHARACTERS = 95

2 ALL FONTS COULD HAVE MAX CHARACTERS 95 
  BUT FONTS CAN HAVE LESS THAN 95
  BUT CAN'T HAVE MORE THAN 95 SYMBOLS

3 ALL FONTS FOR AAT HAVE A FILE EXSTENTION .af (ascii font)

-------------------------------------------------------------
Example:

IN Fonts folder is a file template.af in this file you can see this:

All symbols have a 10 height and MAX width = 30
.........%
.........%
.........%
.........%
.........%
.........%
.........%
.........%
.........%
.........% // end of first symbol
ddddddddd% // start of second symbol
ddddddddd%
ddddddddd%
ddddddddd%
ddddddddd%
ddddddddd%
ddddddddd%
ddddddddd%
ddddddddd%
ddddddddd%
...

---------------------------
How to use your own font

For using your font you need:
1 add your font file to Fonts/ directory
2 open terminal
3 and exec a aat -f fontName
!!! fontName must be without .af

Example:
aat -f test Hiii

---------------------------
For using like a library
1 Paste Fonts/ directory in your project
2 Take a lib_AAT.a and AAT.h
3 Now use aat in your project. Example:
  - For using a aat you need call a printAsciiArtText function with 2 arguments. Example:

    printAsciiArtText("hiii", aat_parameters);

    OR

    printAsciiArtText("hiii", aat);    

    ! ARGUMENTS MUST BE 2
    ! FIRST IT'S A STRING
    ! SECOND IT'S A STRUCTURE OF PARAMETERS
    note: aat it's a define. #define aat aat_parameters. aat_parameters it's a struct

    For using options you can do:
      aat.<optionName> = <value>;
      printAsciiArtText("hiii", aat);

    Options In AAT LIBRARY:
      1  fontName = <Value string: "roman">
      2  isPaddingEnable = <Values: 1 or 0>
      3  color = <Value: 0 or 1 or 2 or 3 or 4 or 5 or 6 or 7>
         0 - default
         1 - Red
         2 - Green
         3 - Yello
         4 - Blue
         5 - Purpl
         6 - Cyan
         7 - Black
      4  outputAlignment = <Values: 0 or 1 or 2> 
        0 it's left 
        1 it's center 
        2 it's right
      5  isLikeAComment = <Values: 1 or 0>
      6  isChangeSpace = <Values: 1 or 0>
      7  windowWidth = <integerValue: 123>
      8  replacedSymbol = <Value 1 symbol: 'd'>      

4 Compile your project with this library 
  gcc -c AAT_libsource.c -o AAT.o && ar rcs lib_AAT<win or lin>.a AAT.o

5 Enjoy :)